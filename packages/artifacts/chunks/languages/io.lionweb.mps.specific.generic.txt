Language (id: io-lionweb-mps-specific) {
    version = '2024-01'
    key = 'io-lionweb-mps-specific'
    name = 'io.lionweb.mps.specific'
    dependsOn -> <none>
    entities:
        Annotation (id: ConceptDescription) {
            key = 'ConceptDescription'
            name = 'ConceptDescription'
            annotates -> -id-Classifier (Classifier)
            extends -> <none>
            implements -> <none>
            features:
                Property (id: ConceptDescription-conceptAlias) {
                    optional = true
                    key = 'ConceptDescription-conceptAlias'
                    name = 'conceptAlias'
                    type -> LionCore-builtins-String (String)
                }
                Property (id: ConceptDescription-conceptShortDescription) {
                    optional = true
                    key = 'ConceptDescription-conceptShortDescription'
                    name = 'conceptShortDescription'
                    type -> LionCore-builtins-String (String)
                }
                Property (id: ConceptDescription-helpUrl) {
                    optional = true
                    key = 'ConceptDescription-helpUrl'
                    name = 'helpUrl'
                    type -> LionCore-builtins-String (String)
                }
        }
        Annotation (id: Deprecated) {
            key = 'Deprecated'
            name = 'Deprecated'
            annotates -> -id-IKeyed (IKeyed)
            extends -> <none>
            implements -> <none>
            features:
                Property (id: Deprecated-comment) {
                    optional = true
                    key = 'Deprecated-comment'
                    name = 'comment'
                    type -> LionCore-builtins-String (String)
                }
                Property (id: Deprecated-build) {
                    optional = true
                    key = 'Deprecated-build'
                    name = 'build'
                    type -> LionCore-builtins-String (String)
                }
        }
        Annotation (id: KeyedDescription) {
            key = 'KeyedDescription'
            name = 'KeyedDescription'
            annotates -> -id-IKeyed (IKeyed)
            extends -> <none>
            implements -> <none>
            features:
                Property (id: KeyedDescription-documentation) {
                    optional = true
                    key = 'KeyedDescription-documentation'
                    name = 'documentation'
                    type -> LionCore-builtins-String (String)
                }
                Reference (id: KeyedDescription-seeAlso) {
                    multiple = true
                    optional = true
                    key = 'KeyedDescription-seeAlso'
                    name = 'seeAlso'
                    type -> LionCore-builtins-Node (Node)
                }
        }
        Annotation (id: ShortDescription) {
            key = 'ShortDescription'
            name = 'ShortDescription'
            annotates -> LionCore-builtins-Node (Node)
            extends -> <none>
            implements -> <none>
            features:
                Property (id: ShortDescription-description) {
                    optional = true
                    key = 'ShortDescription-description'
                    name = 'description'
                    type -> LionCore-builtins-String (String)
                }
        }
        Annotation (id: VirtualPackage) {
            key = 'VirtualPackage'
            name = 'VirtualPackage'
            annotates -> LionCore-builtins-Node (Node)
            extends -> <none>
            implements -> LionCore-builtins-INamed (INamed)
            features: <none>
        }
}
